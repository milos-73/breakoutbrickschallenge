
import 'dart:convert';

import 'package:flutter/services.dart';

class BrickList {
  final List<BrickWall>? brick;

  BrickList({this.brick});

  factory BrickList.fromJson(List<dynamic> parsedJson) {
    //List<Beers> posts = <Beers>[];
    List<BrickWall>? posts = List<BrickWall>.empty(growable: true);
    posts = parsedJson.map((i) => BrickWall.fromJson(i)).toList();

    print(posts[0].bricks![0]?.brickColor);

    return BrickList(brick: posts);
  }




}


///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class BrickWallBricks {
/*
{
  "brick_type": "plain",
  "brick_color": "red",
  "brick_position_x": "brickSize.width + 0.3",
  "brick_position_y": "position.y"
}
*/

  String? brickType;
  String? brickColor;
  String? brickPositionX;
  String? brickPositionY;

  BrickWallBricks({
    this.brickType,
    this.brickColor,
    this.brickPositionX,
    this.brickPositionY,
  });
  BrickWallBricks.fromJson(Map<String, dynamic> json) {
    brickType = json['brick_type']?.toString();
    brickColor = json['brick_color']?.toString();
    brickPositionX = json['brick_position_x']?.toString() ?? '0.0';
    brickPositionY = json['brick_position_y']?.toString() ?? '0.0';
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['brick_type'] = brickType;
    data['brick_color'] = brickColor;
    data['brick_position_x'] = brickPositionX;
    data['brick_position_y'] = brickPositionY;
    return data;
  }
}

class BrickWallWallSizePercentage {
/*
{
  "wall_size_x_percentage": 0.9,
  "wall_size_y_percentage": 0.3
}
*/

  double? wallSizeXPercentage;
  double? wallSizeYPercentage;

  BrickWallWallSizePercentage({
    this.wallSizeXPercentage,
    this.wallSizeYPercentage,
  });
  BrickWallWallSizePercentage.fromJson(Map<String, dynamic> json) {
    wallSizeXPercentage = json['wall_size_x_percentage']?.toDouble();
    wallSizeYPercentage = json['wall_size_y_percentage']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['wall_size_x_percentage'] = wallSizeXPercentage;
    data['wall_size_y_percentage'] = wallSizeYPercentage;
    return data;
  }
}

class BrickWall {
/*
{
  "id": 1,
  "level": 1,
  "rows": 4,
  "columns": 4,
  "wall_size_percentage": {
    "wall_size_x_percentage": 0.9,
    "wall_size_y_percentage": 0.3
  },
  "bricks": [
    {
      "brick_type": "plain",
      "brick_color": "red",
      "brick_position_x": "brickSize.width + 0.3",
      "brick_position_y": "position.y"
    }
  ]
}
*/

  int? id;
  int? level;
  int? rows;
  int? columns;
  BrickWallWallSizePercentage? wallSizePercentage;
  List<BrickWallBricks?>? bricks;

  BrickWall({
    this.id,
    this.level,
    this.rows,
    this.columns,
    this.wallSizePercentage,
    this.bricks,
  });
  BrickWall.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    level = json['level']?.toInt();
    rows = json['rows']?.toInt();
    columns = json['columns']?.toInt();
    wallSizePercentage = (json['wall_size_percentage'] != null) ? BrickWallWallSizePercentage.fromJson(json['wall_size_percentage']) : null;
    if (json['bricks'] != null) {
      final v = json['bricks'];
      final arr0 = <BrickWallBricks>[];
      v.forEach((v) {
        arr0.add(BrickWallBricks.fromJson(v));
      });
      bricks = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['level'] = level;
    data['rows'] = rows;
    data['columns'] = columns;
    if (wallSizePercentage != null) {
      data['wall_size_percentage'] = wallSizePercentage!.toJson();
    }
    if (bricks != null) {
      final v = bricks;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['bricks'] = arr0;
    }
    return data;
  }
}